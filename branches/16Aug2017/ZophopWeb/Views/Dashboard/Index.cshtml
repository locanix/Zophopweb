
<link href="~/Content/font-awesome/css/font-awesome.min.css" rel="stylesheet" />
<link href="~/Content/dataTables.bootstrap.css" rel="stylesheet" />


<style>
    .huge {
        font-size: 35px;
    }

    .widget {
        /*display:none;*/
    }

    .panelFooter {
        font-size: 16px;
        text-align: center;
        padding: 3px;
        padding-left: 10px;
    }

    .panelFooterBlue {
        background-color: #3d8ac9;
    }

    .panelFooterGreen {
        background-color: #71C171;
    }

    .panelFooterOrange {
        background-color: #F3BB70;
    }

    .panelFooterRed {
        background-color: #DE6A67;
    }
</style>

<br />
<h3>Dashboard</h3>
<br />
<div style="position: relative;">

    <div class="panel panel-default">
        <div class="panel-body">

            <div style="float:left;">
                <div id="pieChartL"></div>                
            </div>
            <div style="float:right;">
                <div id="pieChartS"></div>
                <div style="text-align: right; font-size: 11px;">Offline means vehicle not seen from last 15 mins</div>
            </div>
            <div style="text-align:center;top:120px;position:relative;">
                <div class="col-lg-3 col-sm-6">
                    <div class="panel panel-red" style="background-color: #337AB7; color:white">
                        <div class="panel-body" id="fltTotal" style="cursor: pointer; cursor: hand;">
                            <div class="row">
                                <div class="col-xs-3">
                                    <i class="fa fa-bus fa-5x"></i>
                                </div>
                                <div class="col-xs-9 text-right widget">
                                    <div id="TotalDevices" class="huge">@string.Format("{0:n0}", ViewBag.TotalDevices)</div>
                                    <div></div>
                                </div>
                            </div>
                        </div>
                        <div class="panel-footer panelFooter panelFooterBlue">
                            Total Vehicles
                        </div>
                    </div>
                </div>
                @*<div class="col-lg-3 col-sm-6 ">
                        <div class="panel panel-green" style="background-color: #5CB85C; color:white">
                            <div class="panel-body" id="fltNagpur" style="cursor: pointer; cursor: hand;">
                                <div class="row">
                                    <div class="col-xs-3">
                                        <i class="fa fa-bus fa-5x"></i>
                                    </div>
                                    <div class="col-xs-9 text-right widget">
                                        <div id="NagpurDevices" class="huge">@string.Format("{0:n0}", ViewBag.NagpurDevices)</div>
                                        <div></div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-footer panelFooter panelFooterGreen">
                                Nagpur Devices
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-sm-6">
                        <div class="panel panel-yellow" style="background-color: #F0AD4E; color:white">
                            <div class="panel-body" id="fltThane" style="cursor: pointer; cursor: hand;">
                                <div class="row">
                                    <div class="col-xs-3">
                                        <i class="fa fa-bus fa-5x"></i>
                                    </div>
                                    <div class="col-xs-9 text-right widget">
                                        <div id="ThaneDevices" class="huge">@string.Format("{0:n0}", ViewBag.ThaneDevices)</div>
                                        <div></div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-footer panelFooter panelFooterOrange ">
                                Thane Devices
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-sm-6">
                        <div class="panel panel-red" style="background-color: #D9534F; color:white">
                            <div class="panel-body" id="fltOffline" style="cursor: pointer; cursor: hand;">
                                <div class="row">
                                    <div class="col-xs-3">
                                        <i class="fa fa-warning fa-5x"></i>
                                    </div>
                                    <div class="col-xs-9 text-right widget">
                                        <div id="OfflineDevices" class="huge">@string.Format("{0:n0}", ViewBag.OfflineDevices)</div>
                                        <div style="font-size:11px !important;">(Not Seen From Last 15 Mins)</div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-footer panelFooter panelFooterRed ">
                                Offline Devices
                            </div>
                        </div>
                    </div>*@

            </div>

        </div>
    </div>
</div>
<div style="clear:both;"></div>


    <div class="panel panel-default">
    <div class="panel-heading" style="text-align:center; font-weight:bold;font-size:24px;" id="lblHeading">(@string.Format("{0:n0}", ViewBag.TotalDevices)) - Total Vehicles</div>
    <div class="panel-body">
        <div class="dataTable_wrapper">
            <table id="DataTable" class="table table-striped table-bordered table-hover">
                <thead>
                    <tr>
                        @*<th>#</th>*@
                        <th>Device IMEI</th>
                        <th>Vehicle Number</th>
                        <th>Location</th>
                        <th>Status</th>
                        <th>Last Seen</th>
                        <th>Last Speed</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @{ var idx = 1; }
                    @foreach (var item in ViewBag.TotalDevicesList)
                    {
                        var etm = item.LastDataPointEpochTime;
                        var clr = item.GroupName.ToLower().Equals("nagpur") ? "#5CB85C" : "#F0AD4E";
                        var mlnk = (item.Lng > 0 && item.Lat > 0) ? "<a href='https://www.google.co.in/maps/place/" + item.Lat + "," + item.Lng + "' class='fa fa-map-marker fa-2x' style='color: #337AB7;' title='Click to See Location on Map' target='_blank'></a>" : "";
                        var dt = "Never";
                        var st = "<span class='fa fa-bus fa-2x' style='color: " + clr + ";' title='Online'></span>";
                        var sp = "0";
                        if (etm > 0)
                        {
                            dt = (new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).AddSeconds(etm).ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss");
                            st = ((new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc)).AddSeconds(etm).ToLocalTime() < DateTime.Now.AddMinutes(-15)) ? "<span class='fa fa-warning fa-2x' style='color: #D9534F;' title='Offline'></span>" : item.Speed > 0 ? "<span class='fa fa-bus fa-2x' style='color: #5CB85C;' title='Online'></span>" : "<span class='fa fa-bus fa-2x' style='color: #F0AD4E;' title='Online'></span>";
                            sp = string.Format("{0:n0}", item.Speed);
                        }
                        else
                        {
                            dt = System.Configuration.ConfigurationManager.AppSettings["DATE_FOR_NEVER_SEEN"];
                            st = "<span class='fa fa-warning fa-2x' style='color: #D9534F;' title='Offline'></span>";
                        }
                        <tr>
                            @*<td>
                                    @idx
                                </td>*@
                            <td>
                                @item.DeviceIMEI
                            </td>
                            <td>
                                @item.VehicleNumber
                            </td>
                            <td>
                                @item.GroupName
                            </td>
                            <td>
                                @Html.Raw(st)
                            </td>
                            <td>
                                @dt
                            </td>
                            <td>
                                @sp
                            </td>
                            <td>
                                @Html.Raw(mlnk)
                            </td>
                        </tr>

                        idx = idx + 1;
                    }
                </tbody>
            </table>
        </div>
        <!-- /.table-responsive -->
    </div>
    <!-- /.panel-body -->
</div>


        @*<script src="~/Charts/Scripts/jquery-2.1.4.min.js"></script>
            <script src="~/Scripts/dataTables.bootstrap.min.js"></script>*@

        <script src="~/Scripts/jquery-2.1.4.min.js"></script>
        <script src="~/Scripts/jquery.dataTables.min.js"></script>

        <script type="text/javascript" language="javascript" class="init">

            var strLoc = "Total";
            var strLocCount = $('#TotalDevices').html();

            //$('#DataTable').DataTable({
            //    responsive: true,
            //    "order": [[5, "desc"]]
            //});

            ////$(document).ready(function () {
            //    var table = $('#DataTable').DataTable({
            //            responsive: true,
            //            "order": [[4, "desc"]]
            //        });

            //    // Event listener to the two range filtering inputs to redraw on input
            //    $('#txtFilter').keyup(function () {
            //        console.log('filter changed');
            //        table.draw();
            //    });

            //    $('#fltNagpur').on('click', function (e) {
            //        e.preventDefault();
            //        console.log('--1--');
            //        $('#txtFilter').val('nagpur');
            //        console.log('--4--');

            //        console.log($.fn.DataTable);
            //        $.fn.DataTable.ext.search.push(
            //            function (settings, data, dataIndex) {
            //                var fval = $('#txtFilter').val();
            //                var tval = (data[2]) || ''; // use data for the age column

            //                if (fval == tval) {
            //                    return true;
            //                }
            //                return false;
            //            }
            //        );

            //        console.log('--5--');
            //        table.draw();
            //    });
            ////});

            ////$(document).ready( function () {
            var tableSel = $('#DataTable').DataTable({
                responsive: true,
                "order": [[4, "desc"]],
                "pagingType": "full_numbers"
            });
            $('#fltTotal').on('click', function (e) {
                e.preventDefault();
                //$("#lblHeading").html('Total Vehicles (' + $('#TotalDevices').html() + ')');
                strLoc = "Total";
                strLocCount = $('#TotalDevices').html();
                $("#lblHeading").html('(' + strLocCount + ') - ' + strLoc + ' Vehicles');
                $.fn.dataTableExt.afnFiltering.length = 0;
                tableSel.fnDraw();
            });
            //$('#fltNagpur').on('click', function (e) {
            //    e.preventDefault();
            //    console.log('--1--');
            //    console.log($("#lblHeading").html());
            //    $("#lblHeading").html('Nagpur Devices (' + $('#NagpurDevices').html() + ')');
            //    $.fn.dataTableExt.afnFiltering.length = 0;
            //    filterByGroup(2, "nagpur");
            //    tableSel.fnDraw();
            //    console.log('--4--');
            //});
            //$('#fltThane').on('click', function (e) {
            //    e.preventDefault();
            //    console.log('--1--');
            //    $("#lblHeading").html('Thane Devices (' + $('#ThaneDevices').html() + ')');
            //    $.fn.dataTableExt.afnFiltering.length = 0;
            //    filterByGroup(2, "thane");
            //    tableSel.fnDraw();
            //    console.log('--4--');
            //});
            //$('#fltOffline').on('click', function (e) {
            //    e.preventDefault();
            //    console.log('--1--');
            //    $("#lblHeading").html('Offline Devices (' + $('#OfflineDevices').html() + ')');
            //    $.fn.dataTableExt.afnFiltering.length = 0;
            //    filterByState(3, "offline");
            //    tableSel.fnDraw();
            //    console.log('--4--');
            //});


            ////});

            var filterByGroup = function (filterval) {
                console.log('--2--');
                $.fn.dataTableExt.afnFiltering.push(
                    function (oSettings, aData, iDataIndex) {
                        //var rowData = aData[column];
                        var rowData = aData[2];
                        console.log(filterval.toLowerCase() + '==' + rowData.toLowerCase());
                        if (filterval.toLowerCase() == rowData.toLowerCase()) {
                            return true;
                        } else {
                            return false;
                        }
                    }
                );
                console.log('--3--');
            };
            var filterByStatus = function (filterval) {
                console.log('--2--');
                $.fn.dataTableExt.afnFiltering.push(
                    function (oSettings, aData, iDataIndex) {
                        var rowData = aData[3];
                        if(filterval.toLowerCase() == 'offline') {
                            console.log(filterval.toLowerCase() + '==' + rowData.toLowerCase());
                            if (rowData.toLowerCase().indexOf(filterval.toLowerCase()) >= 0) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                        else if(filterval.toLowerCase() == 'stationary') {
                            if (rowData.toLowerCase().indexOf("online".toLowerCase()) >= 0) {
                                rowData = aData[5];
                                if (parseInt(rowData,10) == 0) {
                                    return true;
                                } else {
                                    return false;
                                }
                            }
                            else {
                                return false;
                            }
                        }
                        else if(filterval.toLowerCase() == 'moving') {
                            if (rowData.toLowerCase().indexOf("online".toLowerCase()) >= 0) {
                                rowData = aData[5];
                                if (parseInt(rowData,10) > 0) {
                                    return true;
                                } else {
                                    return false;
                                }
                            }
                            else {
                                return false;
                            }
                        }
                        else {
                            return false;
                        }
                    }
                );
                console.log('--3--');
            };            

        </script>

        <script src="~/Scripts/d3.min.js"></script>
        <script src="~/Scripts/d3pie.min.js"></script>
        <script>
            var colors = ["#923e99","#bca44a","#44b9b0", "#b0ec44", "#8b6834", "#a4a0c9", "#830909",
                            "#90c469", "#618d1b", "#daca61", "#7d9058", "#e4a14b", "#cc9fb1", "#d1c87f", "#e98125"];

            @{ string ljsonData = Json.Encode(ViewBag.LocationsSummary); }
            var ldata = @Html.Raw(ljsonData);
            var lsize = ldata.length;
            if (lsize > 0 ) {
                for (var l in ldata) {
                    ldata[l].color = colors[l];
                }
            }

            var piel = new d3pie("pieChartL", {
                "header": {
                    "title": {
                        "text": "Location-Wise Vehicles",
                        "fontSize": 20,
                        "font": "open sans"
                    }
                },
                "size": {
                    "canvasHeight": 350,
                    "canvasWidth": 400,
                    "pieInnerRadius": "25%",
                    "pieOuterRadius": "65%"
                },
                "data": {
                    "sortOrder": "value-asc",
                    "content": ldata
                },
                "labels": {
                    "inner": {
                        "format": "value"
                    },
                    "mainLabel": {
                        "fontSize": 16
                    },
                    "percentage": {
                        "color": "#ffffff",
                        "decimalPlaces": 0
                    },
                    "value": {
                        "color": "#000000",
                        "fontSize": 18
                    },
                    "lines": {
                        "enabled": true,
                        "style": "straight"
                    },
                    "truncation": {
                        "enabled": true
                    }
                },
                "tooltips": {
                    "enabled": true,
                    "type": "placeholder",
                    "string": "{label}: {value} ({percentage}%)",
                    "styles": {
                        "fontSize": 18
                    }
                },
                "effects": {
                    "pullOutSegmentOnClick": {
                        "speed": 400,
                        "size": 8
                    }
                },
                "callbacks": {
                    onClickSegment: function (info) { 
                        /*console.log("click:", info);*/ 
                        console.log("label: ", info.data.label); 
                        console.log("value: ", info.data.value); 
                        //$("#lblHeading").html(info.data.label + ' Vehicles (' + info.data.value + ')');
                        //$("#lblHeading").html('(' + info.data.value + ') - ' + info.data.label + ' Vehicles');
                        strLoc = info.data.label;
                        strLocCount = info.data.value;
                        $("#lblHeading").html('(' + strLocCount + ') - ' + strLoc + ' Vehicles');
                        $.fn.dataTableExt.afnFiltering.length = 0;
                        filterByGroup(info.data.label);
                        tableSel.fnDraw();
                    }
                }
            });

            var pies = new d3pie("pieChartS", {
                "header": {
                    "title": {
                        "text": "Status-Wise Vehicles",
                        "fontSize": 20,
                        "font": "open sans"
                    }
                },
                "size": {
                    "canvasHeight": 350,
                    "canvasWidth": 400,
                    "pieInnerRadius": "25%",
                    "pieOuterRadius": "65%"
                },
                "data": {
                    "sortOrder": "value-desc",
                    "content": [
                        {
                            "label": "Moving",
                            "value": @ViewBag.MovingDevices,
                            "color": "#5CB85C"
                        },
                        {
                            "label": "Stationary",
                            "value": @ViewBag.StationaryDevices,
                            "color": "#F0AD4E"
                        },
                        {
                            "label": "Offline",
                            "value": @ViewBag.OfflineDevices,
                            "color": "#D9534F"
                        }
                    ]
                },
                "labels": {
                    "inner": {
                        "format": "value"
                    },
                    "mainLabel": {
                        "fontSize": 16
                    },
                    "percentage": {
                        "color": "#ffffff",
                        "decimalPlaces": 0
                    },
                    "value": {
                        "color": "#000000",
                        "fontSize": 18
                    },
                    "lines": {
                        "enabled": true,
                        "style": "straight"
                    },
                    "truncation": {
                        "enabled": true
                    }
                },
                "tooltips": {
                    "enabled": true,
                    "type": "placeholder",
                    "string": "{label}: {value} ({percentage}%)",
                    "styles": {
                        "fontSize": 18
                    }
                },
                "effects": {
                    "pullOutSegmentOnClick": {
                        "speed": 400,
                        "size": 8
                    }
                },
                "callbacks": {
                    onClickSegment: function (info) { 
                        /*console.log("click:", info);*/ 
                        console.log("label: ", info.data.label); 
                        console.log("value: ", info.data.value);
                        strLoc = info.data.label;
                        strLocCount = info.data.value;
                        $("#lblHeading").html('(' + strLocCount + ') - ' + strLoc + ' Vehicles');
                        $.fn.dataTableExt.afnFiltering.length = 0;
                        filterByStatus(info.data.label);                        
                        
                        tableSel.fnDraw();
                    }
                }
            });
        </script>
